// Code generated by mockery v2.53.4. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	uuid "github.com/uesleicarvalhoo/aiqfome/pkg/uuid"
)

// Generator is an autogenerated mock type for the Generator type
type Generator struct {
	mock.Mock
}

// NextID provides a mock function with no fields
func (_m *Generator) NextID() uuid.ID {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for NextID")
	}

	var r0 uuid.ID
	if rf, ok := ret.Get(0).(func() uuid.ID); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(uuid.ID)
		}
	}

	return r0
}

// NewGenerator creates a new instance of Generator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewGenerator(t interface {
	mock.TestingT
	Cleanup(func())
}) *Generator {
	mock := &Generator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
